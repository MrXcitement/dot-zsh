#!/usr/bin/env bash

# install-- make symbolic links in the users home directory
# Mike Barker <mike@thebarkers.com>
# May 14th, 2013

# History
# 2023.09.02 MRB
# - Fix install fails when run outside this repository.

set -o errexit
set -o nounset
set -o pipefail

# Backup a file/directory by renaming it with the current date and time
backup_file() {
	local file="${1}"
    local file_ext

    # file exists and not a symlink
	if [[ -e "${file}" && ! -h "${file}" ]]; then
        file_ext=$(date +%Y%m%d%H%M)
        printf "Backup: %s -> %s\n" "${file}" "${file}.${file_ext}"
        mv "${file}" "${file}.${file_ext}"
	fi
}

# create a symbolic link if one does not allready exist
link_file() {
    local target="${1}"
    local link="${2}"
    local link_dir

    link_dir=$(dirname "${link}")

    if [[ ! -e "${link_dir}" ]]; then
        printf "Make directory: %s\n" "${link_dir}"
        mkdir -p "${link_dir}"
    fi

    if [[ ! -e "${link}" ]]; then
        printf "Link: "
        ln -sfnv "${target}" "${link}"
    fi
}

# link_glob(glob, link_dir)
# glob....: The full path to a location of file(s) and/or folders to link into the link_dir.
# link_dir: The location that the link(s) are created in.
link_glob() {
    local glob="${1}"
    local link_dir="${2}"
    local filename
    local link
    local target
    local target_dir

    target_dir=$(dirname "$glob")

    for item in ${glob}; do
        filename=$(basename "$item")
        link="${link_dir}/${filename}"
        target="${target_dir}/${filename}"
        backup_file "${link}"
        link_file "$target" "$link"
    done
}

# Backup existing files and link files/dirs in the home folder into
# the users home directory.
install_dir="$(cd "$(dirname "$0")" && pwd)"
link_glob "${install_dir}/home/.z*" "${HOME}"

